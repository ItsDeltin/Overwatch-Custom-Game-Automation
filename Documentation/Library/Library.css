body {
    background-color: #313245;
    font-family: Helvetica;
}

.container {
    white-space: nowrap;
}

.sidebar {
    background-color: #444675;
    border: 2px solid #C2C2C2;
    color: white;
    padding: 0.5%;
    display: inline-block;
    width: 20%;
    margin-bottom: 0.5%;
    white-space: nowrap;
}
    .sidebar a {
        color: white;
        display: inline-block;
        margin-bottom: 2px;
    }
        .sidebar a:hover {
            color: #E9FFB4;
        }
    .selected {
        color: #E9FFB4 !important;
        font-weight: bold;
    }
.element {
    overflow: hidden;
    text-overflow: ellipsis;
}
.childrenToggle {
    display: inline-block;
    text-align: center;
    line-height: 0px;
    font-weight: bolder;
    cursor: pointer;
    width: 10px;
    margin-right: 5px;
}
.sidebarSection {
    border-left: 2px solid #6f7191;
    padding-left: 5px;
    margin-left: 5px;
    margin-bottom: 5px;
}
.sidebarSection:hover {
    border-left-color: #c6c6c6;
}
.vsclass::before {
    content: url('Assets/vs/Class.png');
}
.vsmethod::before {
    content: url('Assets/vs/Method.png');
}
.vsevent::before {
    content: url('Assets/vs/Event.png');
}
.vsnamespace::before {
    content: url('Assets/vs/Namespace.png');
}
.vsproperty::before {
    content: url('Assets/vs/Property.png');
}
.vsenum::before {
    content: url('Assets/vs/Enumerator.png');
}
.vsfield::before {
    content: url('Assets/vs/Field.png');
}
.vsconstant::before {
    content: url('Assets/vs/Constant.png');
}
.vsdelegate::before {
    content: url('Assets/vs/Delegate.png');
}

.content {
    background-color: white;
    padding: 10px;
    border: 2px solid #C2C2C2;
    margin-left: 5px;
    display: inline-block;
    width: 75%;
    overflow-wrap: normal;
    text-wrap: normal;
    white-space: normal;
    vertical-align: top;
}
.content img {
    width: 100%;
}
.content pre {
    padding: 5px;
    border: 1px solid gray;
    overflow-x: auto;
}

.section {
    margin-top: 15px;
}
    .section:first-child {
        margin-top: 0 !important;
    }
    .section:empty {
        margin-top: 0 !important;
    }

/*
    &#9654; for arrow
    &#9670; for diamond
    &#9679; for circle
*/
.settings {
    padding: 10px;
    margin: 10px;
    overflow: scroll;
    max-height: 600px;
	border: 1px solid gray;
}
    .settings .title {
    }
    .settings .primary {
    }
    .settings .secondary {
        margin-left: 20px;
    }
    .settings .option {
        margin-left: 40px;
    }

table {
    font-family: arial, sans-serif;
    border-collapse: collapse;
}
td, th {
    border: 1px solid #dddddd;
    text-align: left;
    padding: 8px;
}
tr:nth-child(even) {
    background: #F2F2F2;
}

.p-icon {
    width: 20px;
    float: right;
    margin-left: 5px;
}

/* Parameter info */
.parameters {
}
    .parameters::before {
        content: "Parameters";
        font-weight: bold;
    }
.parameter {
    margin-left: 10px;
    margin-top: 10px;
}
    .parameter:first-of-type {
        margin-top: 3px;
    }
    .parameter .pName {
        font-style: italic;
    }
    .parameter .pType {
        margin-left: 10px;
        margin-top: 3px;
        font-family: monospace;
    }
        .parameter .pType::before {
            content: "Type: ";
            font: initial;
        }
    .parameter .pDescription {
        margin-top: 3px;
        margin-left: 10px;
    }
.optional .pName::before {
    content: "(Optional) ";
    font-style: initial;
}
/* Return info */
.return {
    margin-top: 10px;
}
    .return::before {
        content: "Return Value";
        font-weight: bold;
    }
    .return .rType {
        margin-top: 3px;
        margin-left: 10px;
        font-family: monospace;
    }
        .return .rType::before {
            content: "Type: ";
            font: initial;
        }
    .return .rDescription {
        margin-top: 3px;
        margin-left: 10px;
    }

.method-data {
    margin-left: 20px;
    margin-top: 10px;
}

.opacity {
    opacity: 0.4;
    transition: 0.25s;
}
.opacity:hover {
    opacity: 1;
    
}
a {
	color: unset;
}

.field {
    font-family: monospace;
}
.string {
    color: darkred;
}
.blue {
    color: blue;
}
.type {
    color: #468989;
}
.comment {
    color: green;
}